{
  "openapi": "3.0.1",
  "info": {
    "title": "Petstore Inventory API",
    "description": "API for managing the pet inventory in the Petstore. This API allows users to add, update, delete, and retrieve information about pets available in the store.",
    "version": "1.0.0",
    "contact": {
      "name": "Petstore Support",
      "url": "http://petstore.example.com/support",
      "email": "support@petstore.example.com"
    }
  },
  "tags": [
    {
      "name": "pets",
      "description": "Operations related to pets in the inventory"
    }
  ],
  "paths": {
    "/pets": {
      "get": {
        "operationId": "getPets",
        "tags": [
          "pets"
        ],
        "summary": "Retrieve a list of pets",
        "description": "Fetches a list of all pets available in the inventory.",
        "responses": {
          "200": {
            "description": "A list of pets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pet"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Pets not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "operationId": "addPet",
        "tags": [
          "pets"
        ],
        "summary": "Add a new pet",
        "description": "Adds a new pet to the inventory.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/pets/{petId}": {
      "get": {
        "operationId": "getPetById",
        "tags": [
          "pets"
        ],
        "summary": "Retrieve a pet by ID",
        "description": "Fetches a single pet by its ID.",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to retrieve",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single pet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "operationId": "updatePet",
        "tags": [
          "pets"
        ],
        "summary": "Update an existing pet",
        "description": "Updates the details of an existing pet.",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pet updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Pet not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "operationId": "deletePet",
        "tags": [
          "pets"
        ],
        "summary": "Delete a pet",
        "description": "Removes a pet from the inventory.",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "description": "ID of the pet to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pet deleted successfully"
          },
          "404": {
            "description": "Pet not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Pet": {
        "type": "object",
        "required": [
          "id",
          "name",
          "category",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "12345"
          },
          "name": {
            "type": "string",
            "example": "Fluffy"
          },
          "category": {
            "type": "string",
            "example": "Dog"
          },
          "status": {
            "type": "string",
            "enum": [
              "available",
              "pending",
              "sold"
            ],
            "example": "available"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "friendly"
            }
          }
        },
        "additionalProperties": false
      }
    }
  }
}
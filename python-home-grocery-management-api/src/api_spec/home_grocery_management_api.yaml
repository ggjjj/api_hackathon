openapi: 3.0.0
info:
  title: Home Grocery Management API
  description: An API to manage grocery items in a household fridge.
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1/fridge
paths:
  /items:
    get:
      summary: Get all items in the fridge
      description: Retrieves all items currently stored in the fridge.
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Filter by item category.
        - name: expiringSoon
          in: query
          schema:
            type: boolean
          description: Return items expiring soon.
        - name: sortBy
          in: query
          schema:
            type: string
            enum: [name, expirationDate, category]
          description: Sort the items.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        category:
                          type: string
                        quantity:
                          type: string
                        expirationDate:
                          type: string
                          format: date
    post:
      summary: Add a new item
      description: Adds a new grocery item to the fridge.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                quantity:
                  type: string
                purchaseDate:
                  type: string
                  format: date
                expirationDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Item added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                  item:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      category:
                        type: string
                      quantity:
                        type: string
                      expirationDate:
                        type: string
                        format: date
  /items/{id}:
    get:
      summary: Get a specific item
      description: Retrieves details of a specific grocery item based on its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  item:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      category:
                        type: string
                      quantity:
                        type: string
                      expirationDate:
                        type: string
                        format: date
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Item not found
    put:
      summary: Update an item
      description: Updates details of a specific item.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                quantity:
                  type: string
                expirationDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                  item:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      quantity:
                        type: string
                      expirationDate:
                          type: string
                          format: date
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Item not found
    delete:
      summary: Delete an item
      description: Deletes a specific item from the fridge.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
        '404':
          description: Item not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Item not found
  /items/search:
    get:
      summary: Search for items
      description: Search for items in the fridge by name or keyword.
      parameters:
        - name: query
          in: query
          schema:
            type: string
          required: true
          description: Search keyword.
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        category:
                          type: string
                        quantity:
                          type: string
                        expirationDate:
                          type: string
                          format: date
  /items/expired:
      get:
        summary: Get expired items
        description: Get all expired grocery items in the fridge.
        responses:
          '200':
            description: Expired items retrieved
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: success
                    results:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          category:
                            type: string
                          quantity:
                            type: string
                          expirationDate:
                            type: string
                            format: date
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
